{"name": "Successful fill form", "status": "broken", "statusDetails": {"message": "ValueError: Timeout value connect was <object object at 0x10b0b0b60>, but it must be an int, float or None.", "trace": "@pytest.fixture(scope='function')\n    def setup_browser():\n        options = Options()\n        selenoid_capabilities = {\n            \"browserName\": \"chrome\",\n            \"browserVersion\": \"128.0\",\n            \"selenoid:options\": {\n                \"enableVNC\": True,\n                \"enableVideo\": True\n            }\n        }\n        options.capabilities.update(selenoid_capabilities)\n>       driver = webdriver.Remote(\n            command_executor=f\"https://user1:1234@selenoid.autotests.cloud/wd/hub\",\n            options=options\n        )\n\n../../conftest.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n../../.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n../../.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n../../.venv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:374: in execute\n    return self._request(command_info[0], url, body=data)\n../../.venv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:402: in _request\n    resp = http.request(method, url, body=body, headers=headers)\n../../.venv/lib/python3.13/site-packages/urllib3/_request_methods.py:143: in request\n    return self.request_encode_body(\n../../.venv/lib/python3.13/site-packages/urllib3/_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../../.venv/lib/python3.13/site-packages/urllib3/poolmanager.py:432: in urlopen\n    conn = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)\n../../.venv/lib/python3.13/site-packages/urllib3/poolmanager.py:303: in connection_from_host\n    return self.connection_from_context(request_context)\n../../.venv/lib/python3.13/site-packages/urllib3/poolmanager.py:328: in connection_from_context\n    return self.connection_from_pool_key(pool_key, request_context=request_context)\n../../.venv/lib/python3.13/site-packages/urllib3/poolmanager.py:351: in connection_from_pool_key\n    pool = self._new_pool(scheme, host, port, request_context=request_context)\n../../.venv/lib/python3.13/site-packages/urllib3/poolmanager.py:265: in _new_pool\n    return pool_cls(host, port, **request_context)\n../../.venv/lib/python3.13/site-packages/urllib3/connectionpool.py:1004: in __init__\n    super().__init__(\n../../.venv/lib/python3.13/site-packages/urllib3/connectionpool.py:193: in __init__\n    timeout = Timeout.from_float(timeout)\n../../.venv/lib/python3.13/site-packages/urllib3/util/timeout.py:186: in from_float\n    return Timeout(read=timeout, connect=timeout)\n../../.venv/lib/python3.13/site-packages/urllib3/util/timeout.py:115: in __init__\n    self._connect = self._validate_timeout(connect, \"connect\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'urllib3.util.timeout.Timeout'>\nvalue = <object object at 0x10b0b0b60>, name = 'connect'\n\n    @classmethod\n    def _validate_timeout(cls, value: _TYPE_TIMEOUT, name: str) -> _TYPE_TIMEOUT:\n        \"\"\"Check that a timeout attribute is valid.\n    \n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        \"\"\"\n        if value is None or value is _DEFAULT_TIMEOUT:\n            return value\n    \n        if isinstance(value, bool):\n            raise ValueError(\n                \"Timeout cannot be a boolean value. It must \"\n                \"be an int, float or None.\"\n            )\n        try:\n            float(value)\n        except (TypeError, ValueError):\n>           raise ValueError(\n                \"Timeout value %s was %s, but it must be an \"\n                \"int, float or None.\" % (name, value)\n            ) from None\nE           ValueError: Timeout value connect was <object object at 0x10b0b0b60>, but it must be an int, float or None.\n\n../../.venv/lib/python3.13/site-packages/urllib3/util/timeout.py:152: ValueError"}, "start": 1747920876314, "stop": 1747920876314, "uuid": "fd2e19d1-cc93-4c74-b233-17a0a0288079", "historyId": "6fe5a9365b874ddd38dec6751b552478", "testCaseId": "6fe5a9365b874ddd38dec6751b552478", "fullName": "tests.demoqa.test_registration_form#test_successful", "labels": [{"name": "parentSuite", "value": "tests.demoqa"}, {"name": "suite", "value": "test_registration_form"}, {"name": "host", "value": "MacBook-Pro-Nikita.local"}, {"name": "thread", "value": "16632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.demoqa.test_registration_form"}]}